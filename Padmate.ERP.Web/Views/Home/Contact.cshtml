@{
    Layout = null;
    ViewBag.Title = "Contact";
}

<link rel="stylesheet" href="~/Content/bootstrap.css">
<link rel="stylesheet" href="~/Content/font-awesome.min.css">

<!-- Custom styles for our template -->

<link rel="stylesheet" href="~/Content/main.css">
<link rel="stylesheet" href="~/Content/animate.css">
<link rel="stylesheet" href="~/Content/admin.css">
<link rel="stylesheet" href="~/Content/admin-skin.css">

<link rel="stylesheet" href="~/Content/Common.css">
<link rel="stylesheet" href="~/fonts/font-awesome/css/font-awesome.min.css">

<!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
<!--[if lt IE 9]>
  <script src="http://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js"></script>
  <script src="http://cdn.bootcss.com/respond.js/1.4.2/respond.min.js"></script>
<![endif]-->


<link href="~/Resources/extjs-4.2.1/resources/ext-theme-neptune/ext-theme-neptune-all.css" rel="stylesheet" />

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Resources/extjs-4.2.1/bootstrap.js"></script>



<style>
    .ext-button{

    }
    .ext-button-toolbar{
        background-color:lightblue;
    }

    .ext-paging-toolbar{
        width:100%;
        background-color:lightblue;
    }

    .ext-grid-container{
        width:100%;
        height:100%;
        margin-bottom:10px;
    }
</style>

<div id="gridTable" class="ext-grid-container"></div>
<script>

    Ext.Loader.setConfig({ enabled: true });

    Ext.Loader.setPath('Ext.ux', '../Resources/extjs-4.2.1/ux/');
    Ext.require([
        'Ext.grid.*',
        'Ext.data.*',
        'Ext.util.*',
        'Ext.toolbar.Paging',
        'Ext.ux.PreviewPlugin',
        'Ext.ModelManager',
        'Ext.tip.QuickTipManager',
        'Ext.ux.PageSizePlugin'
    ]);

    var EXTGRID_PAGINGSIZE = 20;
    Ext.onReady(function () {
        Ext.tip.QuickTipManager.init();

        InitButtons();


        // 建立一个store要使用的 model
        Ext.define('model', {
            extend: 'Ext.data.Model',
            fields: [
                { name: 'ID', type: 'int' },
                { name: 'TypeID', type: 'string' },
                { name: 'LogConetnt', type: 'string' }
            ]
        });

        //Store类封装了一个客户端缓存,用于存储 Model 对象. Stores 通过一个代理 Proxy 来加载数据
        var store = Ext.create('Ext.data.Store', {
            model:'model',
            pageSize: 20,  //页容量5条数据
            //是否在服务端排序 （true的话，在客户端就不能排序）
            remoteSort: false,
            remoteFilter: true,
            proxy: {
                type: 'ajax',
                url: '/Home/GetWebLogPageData',
                actionMethods: {
                    create: 'POST',
                    read: 'POST', // by default GET
                    update: 'POST',
                    destroy: 'POST'
                },
                reader: {  //为json格式的数据，例如：[{"total":50,"rows":[{"a":"3","b":"4"}]}]
                    type: 'json', //返回数据类型为json格式
                    root: 'rows',  //数据
                    totalProperty: 'total' //数据总条数
                }
            },
            sorters: [{
                //排序字段。
                property: 'ID',
                //排序类型，默认为 ASC
                direction: 'asc'
            }],
            autoLoad: true  //即时加载数据
        });

        store.on('beforeload', function (thisStore, options) {
            ;
            Ext.apply(thisStore.proxy.extraParams, {


                // 每页显示记录数
                limit: store.pageSize
            });
        });

        var grid = Ext.create('Ext.grid.Panel', {
            renderTo: Ext.get("gridTable"),
            store: store,
            height: Ext.get("gridTable").getHeight()-10,
            width: Ext.get("gridTable").getWidth(),
            selModel: { selType: 'checkboxmodel' },   //选择框
            columns: [
                          {
                              text: '型录ID',
                              dataIndex: 'ID',
                              align: 'left',
                              maxWidth: 80
                          },
                          {
                              text: '型录编号',
                              dataIndex: 'TypeID',
                              maxWidth: 120
                          },
                          {
                              text: '助记标题',
                              dataIndex: 'LogConetnt',
                              align: 'left',
                              minWidth: 80
                          }
            ],
            tbar: toolbar,
            bbar: [{
                cls: 'ext-paging-toolbar',
                xtype: 'pagingtoolbar',
                store: store,
                emptyMsg: '没有数据显示',
                displayMsg: '显示{0}到{1}条数据，共{2}条数据',
                beforePageText: "当前页",
                afterPageText: "共{0}页",
                firstText: '首页',
                prevText: '前一页',
                nextText: '下一页',
                lastText: '最后一页',
                displayInfo: true,
                plugins: [new Ext.ux.PageSizePlugin()]
            }],
            listeners: {
                'itemclick': function (view, record, item, index, e) {
                    Ext.MessageBox.alert("标题", record.data.ID);
                }
            }
        });

        function showAlert() {
            var selectedData = grid.getSelectionModel().getSelection()[0].data;

            Ext.MessageBox.alert("标题", selectedData.cataId);
        }

    });

    var toolbar;
    function InitButtons()
    {
        var enableBtn = Ext.create('Ext.button.Button', {
            text: '启用所有项',
            disabled: true,
            iconCls:'a_add',
            scope: this,
            handler: function () {
                //禁用disableBtn并且启用enableBtn
                enableBtn.disable();
                disableBtn.enable();

                //启用该工具栏
                toolbar.enable();
            }
        });

        var disableBtn = Ext.create('Ext.button.Button', {
            text: '禁用所有项',
            iconCls:'a_add',
            scope: this,
            cls:'ext-button',
            handler: function () {
                //禁用disableBtn并且启用enableBtn
                disableBtn.disable();
                enableBtn.enable();

                //禁用该工具栏
                toolbar.disable();
            }
        });

        toolbar = Ext.create('Ext.toolbar.Toolbar', {
            width: '100%',
            margin: '5 0 0 0',
            cls:'ext-button-toolbar',
            items: [enableBtn, '-','->',disableBtn]
        });
    }
</script>